define(["marionette","underscore","text!templates/task.html","app/views/remove"],function(Marionette,_,taskTmpl,RemoveView){"use strict";_.templateSettings.interpolate=/{{([\s\S]+?)}}/g;var TaskView=Marionette.ItemView.extend({className:"timer",template:_.template(taskTmpl),ui:{control:".timer-control",remove:".remove-timer",select:".input-tick"},events:{"click .start-timer":"startTimer","click .stop-timer":"stopTimer","click @ui.remove":"removeTimer","keyup input":"syncInputs","change input":"syncInputs"},modelEvents:{"change:running":"toggleTimer",change:"syncFields"},onRender:function(){this.$(".time-ticker").val(this.model.timeString())},toggleTimer:function(){if(this.model.get("running")){var $start=this.ui.control.find(".start-timer");this.ui.control.addClass("spin-right"),setTimeout(function(){$start.toggleClass("start-timer stop-timer")},150)}else{var $stop=this.ui.control.find(".stop-timer");this.ui.control.removeClass("spin-right"),setTimeout(function(){$stop.toggleClass("start-timer stop-timer")},150)}},startTimer:function(){this.model.startTimer()},stopTimer:function(){this.model.stopTimer()},removeTimer:function(){var removeView=new RemoveView({model:this.model});$("body").prepend(removeView.render().el),removeView.$el.modal("show"),removeView.on("removeTimer",function(){this.trigger("removeTimer")},this)},syncFields:function(model,options){options.triggeredBy!==this&&_.each(model.changed,function(value,name){"time"===name&&(value=this.model.timeString()),this.$('[name="'+name+'"]').val(value)},this)},syncInputs:function(e){var val,$input=$(e.target),name=$input.attr("name");val=["checkbox","radio"].indexOf($input.attr("type"))>-1?$input.prop("checked"):$input.val(),this.model.set(name,val,{triggeredBy:this})}});return TaskView});
//# sourceMappingURL=task.js.map