define(["backbone","underscore"],function(Backbone,_){"use strict";var Task=Backbone.Model.extend({defaults:{descr:"",running:!1,selected:!1,time:0,timerInterval:0},whitelist:["descr","id","running","time"],initialize:function(){this.on("change:running",function(model,value){value||this.stopTimer()})},resetTimer:function(){this.set("time",0)},set:function(key,val,options){if("time"===key&&"string"==typeof val){var time=val.split(":");val=0,3===time.length&&(val+=60*parseInt(time[0],10)*60,time.shift()),2===time.length&&(val+=60*parseInt(time[0],10),time.shift()),val+=parseInt(time[0],10)}Backbone.Model.prototype.set.call(this,key,val,options)},startTimer:function(){var self=this,timerInterval=setInterval(function(){var time=self.get("time")+1;self.set("time",time)},1e3);this.set("timerInterval",timerInterval),this.set("running",!0)},stopTimer:function(){clearInterval(this.get("timerInterval")),this.set("running",!1)},timeString:function(){var time=this.get("time"),hours=Math.floor(time/3600),minutes=Math.floor(time%3600/60),seconds=Math.floor(time%60);return 10>hours&&(hours="0"+hours),10>minutes&&(minutes="0"+minutes),10>seconds&&(seconds="0"+seconds),hours+":"+minutes+":"+seconds},toJSON:function(){var attrs={};return _.forEach(this.attributes,function(value,key){this.whitelist.indexOf(key)>-1&&(attrs[key]=value)},this),"undefined"==typeof attrs.id&&(attrs.id=_.uniqueId("temp-")),attrs}});return Task});
//# sourceMappingURL=task.js.map